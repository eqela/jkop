
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is CommonGraphRenderer:

import cave

prop lineWidth = 3.0

func renderGraph(ctx as RenderingContext, ox as double, oy as double, width as double, height as double) override
{
	var values = getValues()
	if values == null || SIZE(values) < 2:
		return
	var valueCount = SIZE values
	var high = values[0]
	var low = values[0]
	for(var n=0; n<valueCount; n++) {
		if values[n] < low:
			low = values[n]
		if values[n] > high:
			high = values[n]
	}
	var range = high - low
	ctx.setStrokeStyle(Color.black())
	ctx.setLineWidth(lineWidth)
	ctx.setLineJoin(RenderingContext.LINE_JOIN_ROUND)
	for(var n=0; n<valueCount; n++) {
		var x = (n as double) * (width / (valueCount-1))
		var y = height - ((values[n] - low) / range) * height
		if n == 0 {
			ctx.moveTo(ox + x, oy + y)
		}
		else {
			ctx.lineTo(ox + x, oy + y)
		}
	}
	ctx.stroke()
}
