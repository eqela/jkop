
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.fs
import jk.json

class is StringObject:

func forDefault static as this:
	return new this()

func forFile(file as File, size as Length = null) static as this
{
	var v = new this()
	v.setFile(file)
	if size:
		v.setSize(size)
	return v
}

func forName(name as string, size as Length = null) static as this
{
	var v = new this()
	v.setName(name)
	if size:
		v.setSize(size)
	return v
}

pvar file as File
pvar name as string
pvar bold as bool
pvar italic as bool
pvar underline as bool
pvar size as Length

ctor
{
	file = null
	name = "Sans"
	size = Length.forMicroMeters(2500)
	bold = false
	italic = false
	underline = false
}

func dup as this
{
	var v = new this()
	v.file = file
	v.name = name
	v.bold = bold
	v.italic = italic
	v.underline = underline
	v.size = size
	return v
}

func toString as string
{
	var v = new DynamicMap()
	v.setObject("file", file)
	v.setString("name", name)
	v.setBoolean("bold", bold)
	v.setBoolean("italic", italic)
	v.setBoolean("underline", underline)
	v.setObject("size", size)
	return JSONEncoder.encode(v)
}
