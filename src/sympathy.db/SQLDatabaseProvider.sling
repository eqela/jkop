
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

import capex.data
import capex.mssql
import capex.mysql

func getDatabase(ctx as LoggingContext, connectionString as string, sslMode as string = MySQLDatabase.SSL_MODE_NONE, enableUTF8 as bool = false) static as SQLDatabase
{
	var comps = assert String.split(connectionString, ':', 2)
	var dbtype = Vector.get(comps, 0)
	var dbstr = Vector.get(comps, 1)
	assert String.isNotEmpty(dbtype)
	assert String.isNotEmpty(dbstr)
	if dbtype == "mssql":
		return MSSQLDatabase.forConnectionString(dbstr, ctx)
	if dbtype == "mysql":
		return MySQLDatabase.forConnectionString(dbstr, ctx, sslMode, enableUTF8)
	if dbtype == "sqlite":
		return SQLiteDatabase.forFile(File.forPath(dbstr), true, ctx)
	return null
}

func getDatabase(ctx as LoggingContext, config as DynamicMap) static as SQLDatabase
{
	assert config
	if config.getString("type") == "mysql":
		return MySQLDatabase.forConfig(ctx, config)
	return null
}
