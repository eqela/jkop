
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is DynamicIterator is StringIterator is IntegerIterator is LongIntegerIterator is DoubleIterator is BooleanIterator is Iterator<object>:

pvar iterator as SQLResultSetIterator
pvar columnName as string

**
** Returns the next record as a DynamicMap.
** Returns null if there is no SQLResultSetIterator
** or there is no record left.
**

func nextMap as DynamicMap
{
	assert iterator
	var r = assert iterator.next()
	return r
}

**
** Returns the column value of the next record as object.
** Returns null if there is no record left.
**

func next as object
{
	var m = assert nextMap()
	return m.get(columnName)
}

func hasNext as bool
{
	// FIXME
	assert iterator
	return true
}

**
** Returns the column value of the next record as string.
** Returns null if there is no record left.
**

func nextString as string
{
	var m = assert nextMap()
	return m.getString(columnName)
}

**
** Returns the column value of the next record as integer.
** Returns 0 if there is no record left.
**

func nextInteger as int
{
	var m = nextMap()
	if m == null:
		return 0
	return m.getInteger(columnName)
}

**
** Returns the column value of the next record as long.
** Returns 0 if there is no record left.
**

func nextLong as long
{
	var m = nextMap()
	if m == null:
		return 0
	return m.getLongInteger(columnName)
}

**
** Returns the column value of the next record as double.
** Returns 0.0 if there is no record left.
**

func nextDouble as double
{
	var m = nextMap()
	if m == null:
		return 0.0
	return m.getDouble(columnName)
}

**
** Returns the column value of the next record as boolean.
** Returns false if there is no record left.
**

func nextBoolean as bool
{
	var m = nextMap()
	if m == null:
		return false
	return m.getBoolean(columnName)
}
