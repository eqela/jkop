
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

var name public as string
var data public as string
var attributes public as DynamicMap
var children public as vector<this>

func getDOMNodesByName(name as string) as vector<this>
{
	assert children && sizeof children > 0
	var elements = new vector<this>
	foreach child in children {
		if String.equals(child.name, name):
			elements += child
	}
	return elements
}

func getAttribute(name as string) as string
{
	assert attributes
	return attributes.getString(name)
}

func toString(tabCount as int = 0) as string
{
	var sb = new StringBuilder()
	var tb = tabCount
	if tb < 0:
		tb = 0
	var i = 0
	while i < tb {
		sb.appendString("\t")
		i ++
	}
	if String.equals(name, "cdata") {
		sb.appendString("<![CDATA[")
		sb.appendString(data)
		sb.appendString("]]>")
		return sb.toString()
	}
	sb.appendString("<")
	sb.appendString(name)
	if attributes {
		foreach name in attributes.getKeys():
			sb.appendString(" " .. name .. "=\"" .. attributes.getString(name) .. "\"")
	}
	sb.appendString(">")
	if children && sizeof children > 0 {
		foreach child in children {
			sb.appendString("\n")
			sb.appendString(child.toString(tb + 1))
		}
		sb.appendString("\n")
		i = 0
		while i < tb {
			sb.appendString("\t")
			i ++
		}
	}
	else {
		sb.appendString(data)
	}
	sb.appendString("</")
	sb.appendString(name)
	sb.appendString(">")
	return sb.toString()
}
