
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is RichTextParagraph:

prop id as string
prop text as string

func toMarkup override as string
{
	var sb = new StringBuilder()
	var delim as string
	if(String.isEmpty(id)) {
		delim = "---"
	}
	else {
		delim = "--- " .. id .. " ---"
	}
	sb.append(delim)
	sb.append('\n')
	if(text != null) {
		sb.append(text)
		if(String.endsWith(text, "\n") == false) {
			sb.append('\n')
		}
	}
	sb.append(delim)
	return sb.toString()
}

func toText override as string
{
	return text
}

func toJson override as DynamicMap
{
	var v = new DynamicMap()
	v.set("type", "preformatted")
	v.set("id", id)
	v.set("text", text)
	return v
}

func toHtml(refs as RichTextDocumentReferenceResolver) override as string
{
	var ids = ""
	if(String.isEmpty(id) == false) {
		ids = " id=\"" .. HTMLString.sanitize(id) .. "\""
	}
	var codeo = ""
	var codec = ""
	if(String.equals("code", id)) {
		codeo = "<code>"
		codec = "</code>"
	}
	return "<pre" .. ids .. ">" .. codeo .. HTMLString.sanitize(text) .. codec .. "</pre>"
}
