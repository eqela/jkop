
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class abstract:

import cape

var timeStamp private as long
var connectionMap private as DynamicMap

func getUserId abstract as string

func getConnection(connectionId as string) as ChatConnectionHandler
{
	assert connectionMap
	return connectionMap.get(connectionId) as ChatConnectionHandler
}

func addConnection(connection as ChatConnectionHandler)
{
	assert connection
	if not connectionMap:
		connectionMap = new DynamicMap()
	connectionMap.set(connection.getConnectionId(), connection)
}

func removeConnectionForId(connectionId as string)
{
	assert String.isNotEmpty(connectionId)
	if connectionMap:
		connectionMap.remove(connectionId)
	if not isOnline():
		timeStamp = SystemClock.asUTCSeconds()
}

func removeConnection(connection as ChatConnectionHandler)
{
	assert connection
	removeConnectionForId(connection.getConnectionId())
}

func getConnectionCount as int
{
	assert connectionMap
	return connectionMap.getCount()
}

func getConnectionIds as vector<string>:
	return connectionMap.getKeys()

func isOnline as bool:
	return getConnectionCount() > 0

func getLastActive as long:
	return timeStamp
