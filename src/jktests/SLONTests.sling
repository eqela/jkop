
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.slon
import jk.json
import jk.test

class is UnitTest:

func testSLON
{
	var o = new DynamicMap()
	o.setString("string", "123")
	o.setInteger("number", 456)
	o.setBoolean("booleanNo", false)
	o.setBoolean("booleanYes", true)
	o.setObject("nullValue", null)
	var v = new DynamicVector()
	v.appendString("testing1")
	v.appendString("testing2")
	o.setObject("stringVector", v)
	var v2 = new DynamicVector()
	v2.appendObject(new map {
		v1 "v2"
		v3 "v4"
	})
	v2.appendObject(new map {
		v5 "v6"
		v7 "v8"
	})
	o.setObject("objectVector", v2)
	o.setObject("difficult identifier", "super man")
	println ""
	println "SLON:"
	var slon = SLONEncoder.toString(o)
	ASSERT(slon)
	println slon
	println ""
	println "JSON:"
	var oo = SLONParser.parseString(slon)
	ASSERT(oo)
	var json = JSONEncoder.toString(oo)
	println json
	println ""
	var ooo = JSONParser.parseString(json) as DynamicMap
	ASSERT(ooo)
	ASSERT(ooo.getString("string") == "123")
	ASSERT(ooo.getInteger("number") == 456)
	ASSERT(ooo.getBoolean("booleanNo") == false)
	ASSERT(ooo.getBoolean("booleanYes") == true)
	ASSERT(ooo.get("nullValue") == null)
}

func execute override as bool
{
	START_TESTS()
	TEST("SLON encoder and parser", testSLON())
	END_TESTS()
}
