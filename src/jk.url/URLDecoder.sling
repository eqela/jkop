
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func xcharToInteger(c as char) static as int
{
	if c >= '0' && c <= '9' {
		var ci = c as int
		return ci - '0'
	}
	else if c >= 'a' && c <= 'f' {
		return 10 + c - 'a'
	}
	else if c >= 'A' && c <= 'F' {
		return 10 + c - 'A'
	}
	return 0
}

func decode(astr as string) static as string
{
	assert astr
	var sb = new StringBuilder()
	var str = String.strip(astr)
	var it = String.iterate(str)
	while it {
		var x = it.getNextChar()
		if x < 1:
			break
		if x == '%' {
			var x1 = it.getNextChar()
			var x2 = it.getNextChar()
			if x1 > 0 && x2 > 0 {
				sb.appendCharacter(((xcharToInteger(x1) * 16) + xcharToInteger(x2)) as char)
			}
			else {
				break
			}
		}
		else if x == '+' {
			sb.appendCharacter(' ')
		}
		else {
			sb.appendCharacter(x)
		}
	}
	return sb.toString()
}
