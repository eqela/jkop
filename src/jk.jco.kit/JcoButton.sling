
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class #jco #component:

prop text as string #content
prop font as string #style = "Arial 14px bold"
prop color as string #style = "#0000FF"
prop textColor as string #style = "white"
prop innerPadding as string #style = "12px"
prop handler as function

stylesheet
{
	:host {
		display "block"
	}
	.button {
		display "table"
		padding @{innerPadding}
		background-color @{color}
		color @{textColor}
		border-radius "8px"
		cursor "pointer"
		font-family @{JcoFont.parse(font).family}
		font-size @{JcoFont.parse(font).size}
		font-weight @{JcoFont.parse(font).weight}
		user-select "none"
		box-sizing "border-box"
	}
	".button > div" {
		margin "0"
		padding "0"
		display "table-cell"
		vertical-align "middle"
		text-align "center"
	}
}

markup
{
	<div var buttonElement class="button">
		<div>
			{
				if String.isNotEmpty(text):
					render text
				foreach child in children:
					render child
			}
		</div>
	</div>
}

func onRendered override
{
	var be = buttonElement
	if be {
		lang "js" {{{
			be.addEventListener('click', () => {
				this.onElementClicked()
			})
		}}}
	}
}

func onElementClicked
{
	var oc = handler
	if oc:
		oc()
}
