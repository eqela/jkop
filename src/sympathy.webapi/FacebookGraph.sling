
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

import capex.http

class FacebookHTTPClientListener is HTTPClientListener
{
	prop listener as function<void,DynamicMap,Error>
	var body as buffer

	func onError(message as string) override
	{
		if(listener != null) {
			listener(null, Error.forMessage(message))
		}
	}

	func onDataReceived(buffer as buffer) override as bool
	{
		body = buffer
		return(true)
	}

	func replaceUnicodeChars(response as string) as string
	{
		var str = response
		if(String.contains(response, "\\u0040")) {
			str = String.replace(response, "\\u0040", "@")
		}
		if(String.contains(response, "\\u00f1")) {
			str = String.replace(str, "\\u00f1", "Ã±")
		}
		return(str)
	}

	func onResponseCompleted override
	{
		base.onResponseCompleted()
		if(listener != null) {
			var json = JSONParser.parse(DataValidator.toValidJSONString(replaceUnicodeChars(String.forUTF8Buffer(body)))) as DynamicMap
			if(json == null) {
				listener(null, Error.forMessage("Invalid response JSON Format from Facebook"))
				return
			}
			var error = json.getDynamicMap("error")
			if(error != null) {
				var e = Error.forMessage(error.getString("message"))
				e.setCode(error.getString("code"))
				e.setDetail(error.getString("fbtrace_id"))
				listener(null, e)
				return
			}
			listener(json, null)
		}
	}
}

func getUserProfile(fbUserId as string, fbAccessToken as string, listener as function<void,DynamicMap,Error>) static
{
	var op = new HTTPClientOperation()
	op.setAcceptInvalidCertificate(true)
	var req = HTTPClientRequest.forGET("https://graph.facebook.com/" .. fbUserId .. "?fields=id,last_name,first_name,email&access_token=" .. fbAccessToken)
	op.executeRequest(req, new FacebookHTTPClientListener().setListener(listener))
}
