
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is UnitTest:

import cape.unit

func testMapMethods
{
	var val = new map<string,string>
	Map.set(val, "key", "value")
	ASSERT(Map.count(val) == 1)
	Map.set(val, "secondKey", "secondValue")
	ASSERT(Map.count(val) == 2)
	ASSERT(Map.containsKey(val, "key"))
	ASSERT(Map.containsKey(val, "secondKey"))
	ASSERT(Map.containsKey(val, "thirdKey") == false)
	ASSERT(Map.containsValue(val, "value"))
	ASSERT(Map.containsValue(val, "secondValue"))
	ASSERT(Map.containsValue(val, "thirdValue") == false)
	ASSERT(Map.getValue(val, "key") == "value")
	ASSERT(Map.getValue(val, "secondKey") == "secondValue")
	ASSERT(JSONEncoder.encode(Map.getKeys(val)) == JSONEncoder.encode(Vector.forArray([string: "key", "secondKey" ])))
	ASSERT(JSONEncoder.encode(Map.getValues(val)) == JSONEncoder.encode(Vector.forArray([string: "value", "secondValue" ])))
	Map.remove(val, "key")
	ASSERT(Map.count(val) == 1)
	ASSERT(Map.containsKey(val, "key") == false)
	ASSERT(Map.containsValue(val, "value") == false)
	ASSERT(Map.getValue(val, "key") == null)
	Map.clear(val)
	ASSERT(Map.count(val) == 0)
}

func execute override:
	TEST("Map Methods", testMapMethods())
