
/*
 * This file is part of Jkop
 * Copyright (c) 2019 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func cleanComment(comment as string) static as string
{
	assert comment
	if String.startsWith(comment, "//") {
		return String.stripFromEnd(String.getSubString(comment, 2))
	}
	if String.startsWith(comment, "/*") == false || String.endsWith(comment, "*/") == false:
		return comment
	var m = String.getLength(comment)-4
	var sb = new StringBuilder()
	var it = String.iterate(comment)
	var n = 2
	var newline = true
	var blank = false
	it.getNextChar()
	it.getNextChar()
	while n <= m {
		var c = it.getNextChar()
		n ++
		if c < 1:
			break
		if c == '\r':
			continue
		if sb.count() < 1 && c == '\n':
			continue
		if newline {
			if c == ' ' || c == '\t' || c == '*':
				continue
			newline = false
		}
		sb.append(c)
		if c == '\n':
			newline = true
		if c == ' ' || c == '\t' || c == '\n' {
			blank = true
		}
		else {
			blank = false
		}
	}
	var v = sb.toString()
	if blank:
		v = String.strip(v)
	return v
}
