
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2017 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

IFDEF "target_js" {
	func toCamelCase(word1 as string, word2 as string) static as string
	{
		assert word1
		assert word2
		var sb = new StringBuilder()
		var c0 = String.charAt(word1, 0)
		if Character.isUppercaseAlpha(c0) {
			sb.append(Character.toLowercase(c0))
			sb.append(String.getSubString(word1, 1))
		}
		else {
			sb.append(word1)
		}
		var c1 = String.charAt(word2, 0)
		if Character.isLowercaseAlpha(c1) {
			sb.append(Character.toUppercase(c1))
			sb.append(String.getSubString(word2, 1))
		}
		else {
			sb.append(word2)
		}
		return sb.toString()
	}
}

func setObjectProperties(object as object, properties as object) static
{
	assert object
	assert properties
	IFDEF "target_js" {
		lang "js" {{{
			for(let key of Object.keys(properties)) {
				if(properties.hasOwnProperty(key)) {
					object[this.toCamelCase("set", key)](properties[key]);
				}
			}
		}}}
	}
	ELSE {
		ERROR "Not implemented."
	}
}
