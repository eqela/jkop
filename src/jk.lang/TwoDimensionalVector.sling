
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2019 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func set <T> (vector as vector<vector<T>>, row as int, column as int, val as T) static
{
    assert vector
    assert row > 0 || column > 0
    var v = vector[row]
    Vector.set(v, column, val)
}

func get <T> (vector as vector<vector<T>>, row as int, column as int) static as T
{
    assert vector
    assert row > 0 || column > 0
     var v = vector[row]
    return Vector.get(v, column)
}

func setSize <T> (vector as vector<vector<T>>, row as int, column as int) static as vector<vector<T>>
{
    assert vector
    for(var i = 0; i < row; i++) {
        var v = vector[i] as! vector<T>
        if not v {
            v = new vector<T>
            Vector.setSize(v, column)
            vector += v
            continue
        }
        Vector.setSize(v, column)
    }
    return vector
}

func getSize <T> (vector as vector<vector<T>>) static as int
{
    assert vector
    var size = 0
    foreach v as vector<T> in vector:
        size += Vector.getSize(v)
    return size
}
