
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is RichTextParagraph:

pvar type as string
pvar list as vector<string>

func toJson override as DynamicMap
{
	var v = new DynamicMap()
	v.setString("type", type)
	v.setObject("list", list)
	return v
}

func processList(refs as RichTextDocumentReferenceResolver, v as vector<string>) as string
{
	var sb = new StringBuilder()
	foreach str in v {
		sb.appendString("<li>")
		var cc = RichTextStyledParagraph.forString(str)
		if cc:
			sb.appendString(cc.toHtml(refs))
		sb.appendString("</li>")
	}
	return sb.toString()
}

func toHtml(refs as RichTextDocumentReferenceResolver) override as string
{
	var tag = ""
	if String.equals("unordered", type) {
		tag = "ul"
	}
	else if String.equals("ordered", type) {
		tag = "ol"
	}
	return "<" .. tag .. " class=\"list\">" .. processList(refs, list) .. "</" .. tag .. ">"
}
