
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.test
import capex.crypto

class is UnitTest:

func testSHAEncoder
{
	var shaEncoder = SHAEncoder.create()
	ASSERT(shaEncoder != null)
	ASSERT(Buffer.getSize(shaEncoder.encodeAsBuffer(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA1)) == 20)
	ASSERT(Buffer.getSize(shaEncoder.encodeAsBuffer(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA256)) == 32)
	ASSERT(Buffer.getSize(shaEncoder.encodeAsBuffer(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA384)) == 48)
	ASSERT(Buffer.getSize(shaEncoder.encodeAsBuffer(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA512)) == 64)
	ASSERT(shaEncoder.encodeAsString(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA1) == "0a4d55a8d778e5022fab701977c5d840bbc486d0")
	ASSERT(shaEncoder.encodeAsString(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA256) == "a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e")
	ASSERT(shaEncoder.encodeAsString(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA384) == "99514329186b2f6ae4a1329e7ee6c610a729636335174ac6b740f9028396fcc803d0e93863a7c3d90f86beee782f4f3f")
	ASSERT(shaEncoder.encodeAsString(String.toUTF8Buffer("Hello World"), SHAEncoder.SHA512) == "2c74fd17edafd80e8447b0d46741ee243b7eb74dd2149a0ab1b9246fb30382f27e853d8585719e0e67cbda0daa8f51671064615d645ae27acb15bfb1447f459b")
}

func execute override:
	TEST("SHAEncoder functions", testSHAEncoder())
