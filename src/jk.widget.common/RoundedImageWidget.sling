
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2019 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.gfx.util

class #widget:

ui LayerWidget
{
	ImageWidget imageWidget {
		imageScaleMethod = ImageWidget.FILL
	}
}

prop widgetScaleSize as int

ctor(ctx as GuiApplicationContext)
{
	base(ctx)
	forceCreateWidget()
}

func setWidgetSize(sz as int #notLiteral) as this
{
	setWidgetHeightRequest(sz)
	setWidgetWidthRequest(sz)
	return this
}

func setWidgetImageResource(src as string) as this
{
	var image = ImageUtil.createCircularImageSync(context.getResourceImage(src))
	imageWidget.setWidgetImage(image)
	return this
}

func setWidgetImage(image as Image) as this
{
	var img = ImageUtil.createCircularImageSync(image)
	imageWidget.setWidgetImage(img)
	return this
}
