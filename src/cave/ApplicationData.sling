
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func getApplicationData(ctx as GuiApplicationContext) static as File
{
	assert ctx
	IFDEF "target_android" {
		return ctx.getApplicationDataDirectory()
	}
	ELSE IFDEF "target_ios_objc" {
		var documentDirectory as string
		lang "objc" {{{
			documentDirectory = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)[0];
		}}}
		assert documentDirectory:
			Log.error(ctx, "No document directory received from iOS API")
		var dd = File.forPath(documentDirectory)
		if not dd.isDirectory():
			dd.createDirectoryRecursive()
		Log.debug(ctx, "iOS document directory: `" .. dd.getPath() .. "'")
		return dd
	}
	ELSE IFDEF "target_swift" {
		var documentDirectory as string
		lang "swift" {{{
			documentDirectory = NSSearchPathForDirectoriesInDomains(FileManager.SearchPathDirectory.documentDirectory, FileManager.SearchPathDomainMask.userDomainMask, true)[0]
		}}}
		assert documentDirectory:
			Log.error(ctx, "No document directory received from iOS API")
		var dd = File.forPath(documentDirectory)
		if not dd.isDirectory():
			dd.createDirectoryRecursive()
		Log.debug(ctx, "iOS document directory: `" .. dd.getPath() .. "'")
		return dd
	}
	ELSE {
		ERROR "Not implemented."
		return null
	}
}

func retrieveFile(ctx as GuiApplicationContext, filename as string) static as File
{
	IFDEF "target_android" {
		var ff = getApplicationData(ctx).entry(filename)
		if not ff.exists() {
			if not ff.touch():
				return null
		}
		return ff
	}
	ELSE IFDEF "target_ios_objc" {
		var dir = assert getApplicationData(ctx)
		return dir.entry(filename)
	}
	ELSE IFDEF "target_swift" {
		var dir = assert getApplicationData(ctx)
		return dir.entry(filename)
	}
	ELSE {
		ERROR "Not implemented."
		return null
	}
}
