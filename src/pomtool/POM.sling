
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

class Exclusion public
{
	pvar groupId as string
	pvar artifactId as string
}

class Dependency public
{
	pvar groupId as string
	pvar artifactId as string
	pvar version as string
	pvar type as string
	pvar scope as string
	pvar optional as string
	pvar exclusions as vector<Exclusion>
}

class Person public
{
	pvar id as string
	pvar name as string
	pvar email as string
	pvar url as string
	pvar organization as string
	pvar organizationUrl as string
	pvar roles as vector<string>
	pvar timezone as string
	pvar properties as KeyValueListForStrings
}

class License public
{
	pvar name as string
	pvar url as string
	pvar distribution as string
	pvar comments as string
}

class MailingList public
{
	pvar name as string
	pvar subscribe as string
	pvar unsubscribe as string
	pvar post as string
	pvar archive as string
	pvar otherArchives as vector<string>
}

class SCM public
{
	pvar connection as string
	pvar developerConnection as string
	pvar tag as string
	pvar url as string
}

class Parent public
{
	pvar groupId as string
	pvar artifactId as string
	pvar version as string
	pvar relativePath as string
}

class Organization public
{
	pvar name as string
	pvar url as string
}

class IssueManagement public
{
	pvar system as string
	pvar url as string
}

class RepositoryComponent public
{
	pvar enabled as string
	pvar updatePolicy as string
	pvar checksumPolicy as string
}

class Repository public
{
	pvar id as string
	pvar name as string
	pvar url as string
	pvar layout as string
	pvar releases as RepositoryComponent
	pvar snapshots as RepositoryComponent
}

class BuildResource public
{
	pvar targetPath as string
	pvar filtering as string
	pvar directory as string
	pvar includes as vector<string>
	pvar excludes as vector<string>
}

class Configuration public
{
	pvar name as string
	pvar params as DynamicMap
	pvar values as KeyValueListForStrings
	pvar children as vector<this>

	func addToValues(key as string, value as string)
	{
		if values == null:
			values = new KeyValueListForStrings()
		values.add(key, value)
	}

	func addToChildren(x as this)
	{
		assert x
		if children == null:
			children = new vector<this>
		children += x
	}
}

class BuildExecution public
{
	pvar id as string
	pvar goals as vector<string>
	pvar phase as string
	pvar inherited as string
	pvar configuration as Configuration
}

class BuildPlugin public
{
	pvar groupId as string
	pvar artifactId as string
	pvar version as string
	pvar extensions as string
	pvar inherited as string
	pvar configuration as Configuration
	pvar dependencies as vector<Dependency>
	pvar executions as vector<BuildExecution>
}

class BuildExtension public
{
	pvar groupId as string
	pvar artifactId as string
	pvar version as string
}

class Build public
{
	pvar defaultGoal as string
	pvar directory as string
	pvar finalName as string
	pvar filters as vector<string>
	pvar resources as vector<BuildResource>
	pvar testResources as vector<BuildResource>
	pvar plugins as vector<BuildPlugin>
	pvar pluginManagement as vector<BuildPlugin>
	pvar sourceDirectory as string
	pvar scriptSourceDirectory as string
	pvar testSourceDirectory as string
	pvar outputDirectory as string
	pvar testOutputDirectory as string
	pvar extensions as vector<BuildExtension>
}

class ReportSet public
{
	pvar id as string
	pvar reports as vector<string>
	pvar inherited as string
	pvar configuration as Configuration
}

class ReportingPlugin public
{
	pvar groupId as string
	pvar artifactId as string
	pvar version as string
	pvar reportSets as vector<ReportSet>
}

class Reporting public
{
	pvar outputDirectory as string
	pvar plugins as vector<ReportingPlugin>
}

class CIManagementNotifier public
{
	pvar type as string
	pvar sendOnError as string
	pvar sendOnFailure as string
	pvar sendOnSuccess as string
	pvar sendOnWarning as string
	pvar configuration as Configuration
}

class CIManagement public
{
	pvar system as string
	pvar url as string
	pvar notifiers as vector<CIManagementNotifier>
}

pvar modelVersion as string
pvar groupId as string
pvar artifactId as string
pvar version as string
pvar packaging as string
pvar dependencies as vector<Dependency>
pvar parent as Parent
pvar dependencyManagement as vector<Dependency>
pvar modules as vector<string>
pvar properties as KeyValueListForStrings
pvar build as Build
pvar reporting as Reporting
pvar name as string
pvar description as string
pvar url as string
pvar inceptionYear as string
pvar licenses as vector<License>
pvar organization as Organization
pvar developers as vector<Person>
pvar contributors as vector<Person>
pvar issueManagement as IssueManagement
pvar ciManagement as CIManagement
pvar mailingLists as vector<MailingList>
pvar scm as SCM
pvar prerequisites as KeyValueListForStrings
pvar repositories as vector<Repository>
pvar pluginRepositories as vector<Repository>
// FIXME: distributionManagement
// FIXME: profiles

ctor
{
	modelVersion = "4.0.0"
}
