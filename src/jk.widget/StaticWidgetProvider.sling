
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is WidgetProvider:

meta
{
	description [[
		A StaticWidgetProvider is used to dispense a vector of widgets one by one through
		the WidgetProvider interface. This allows the user to pre-allocate wigdet objects for
		later use eg. in dynamic scrollers.
	]]
}

func forWidgets(widgets as vector<Widget>) static as this
{
	var v = new this()
	v.setWidgets(widgets)
	return v
}

pvar widgets as vector<Widget>
var current = 0

func getNextWidget as Widget
{
	assert widgets
	var v = Vector.get(widgets, current)
	if v:
		current ++
	return v
}

func getTotalCount as long:
	return Vector.getSize(widgets)

func reset:
	current = 0
