
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.jco.common

class abstract is JcoComponent:

// from JcoComponent

func updateStyle virtual
{
    // FIXME
}

func render virtual as vector
{
    // FIXME
    return null
}

func onRendered virtual
{
    // FIXME
}

func onMounted virtual
{
    // FIXME
}

func onUnmounted virtual
{
    // FIXME
}

func createStyleSheet virtual as JcoStyleSheet
{
    // FIXME
    return null
}

func createElementByType(type as typeinfo) virtual as object
{
    // FIXME
    return null
}

func createElementByName(name as string) virtual as object
{
    // FIXME
    return null
}

func addChild(parent as object, child as object) virtual
{
    // FIXME
}

func update virtual
{
    // FIXME
}

func addToChildren(child as object) virtual
{
    // FIXME
}

func removeChildren virtual
{
    // FIXME
}

func replaceChildren(newChildren as vector<object>) virtual
{
    // FIXME
}

// from JcoComponentWeb

func updateContent virtual
{
    // FIXME
}

func setElementAttribute(element as object, key as string, value as dynamic) virtual
{
    // FIXME
}

func setStyleProperty(name as string, value as string) virtual
{
    // FIXE
}

func getStyleProperty(name as string) virtual as string
{
    // FIXME
    return null
}

func onCreated virtual
{
    // FIXME
}

func processStyleSheetString(value as string) virtual as string
{
    // FIXME
    return null
}

prop children as vector<object>
