
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is RS256:

func generate(data as buffer, key as string) override as buffer
{
	assert data
	assert String.isNotEmpty(key)
	var v as buffer
	var error as string
	lang "lua" buffer {{{
		v, error = _crypto:rs256_sign(data, key)
	}}}
	if String.isNotEmpty(error):
		setLastErrorDescription(error)
	return v
}

func validate(data as buffer, signature as buffer, key as string) override as bool
{
	assert data
	assert String.isNotEmpty(key)
	var result as int
	var error as string
	lang "lua" {{{
		result, error = _crypto:rs256_verify(data, signature, key)
	}}}
	if result == 1:
		return true
	if String.isNotEmpty(error):
		setLastErrorDescription(error)
	return false
}
