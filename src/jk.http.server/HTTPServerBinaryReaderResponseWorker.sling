
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.io
import jk.log

class is HTTPServerResponseWorker:

func forReader(reader as Reader) static as this
{
	var v = new this()
	v.setReader(reader)
	return v
}

pvar reader as Reader
pvar packetSize = 8192 * 2
var mimeType as string
var workBuffer as buffer

ctor:
	mimeType = "application/octet-stream"

func setMimeType(value as string):
	mimeType = value

func getMimeType override as string:
	return mimeType

func getWorkerDescription override as string:
	return VALUE "__THIS__"

func onStart override
{
	base.onStart()
	workBuffer = malloc packetSize
}

func tick override as bool
{
	assert workBuffer
	assert reader
	var r = reader.read(workBuffer)
	if r < 1:
		return false
	if not session.writeData(workBuffer, r) {
		Log.debug(context, "Remote connection closed. " .. VALUE "__THIS__" .. " aborted.")
		return false
	}
	return true
}
