
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2019 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class <T>:

var vector as vector<T>
var columnCount as int

ctor(rowSize as int, columnSize as int)
{
    vector = new vector<T>
    setSize(rowSize, columnSize)
}

func set(row as int, column as int, val as T)
{
    assert vector
    assert row >= 0 || column >= 0
    var size = (row * columnCount) + column
    assert Vector.getSize(vector) > size
    Vector.set(vector, size, val)
}

func get(row as int, column as int) as T
{
    assert vector
    assert row >= 0 || column >= 0
    var size = (row * columnCount) + column
    assert Vector.getSize(vector) > size
    return Vector.get(vector, size)
}

func setSize(rowSize as int, colSize as int) as this
{
    assert vector
    columnCount = colSize
    Vector.setSize(vector, rowSize * colSize)
    return this
}

func getRowCount as int
{
    assert vector
    return sizeof vector / columnCount
}

func getColumnCount as int
{
    assert vector
    return columnCount
}
