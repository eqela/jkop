
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.os

class:

func getPathSeparator static as char
{
	IFDEF "target_cs" {
		return lang "cs" char {{{ System.IO.Path.DirectorySeparatorChar }}}
	}
	ELSE IFDEF "target_java" {
		return lang "java" char {{{ java.io.File.separatorChar }}}
	}
	ELSE IFDEF "target_browser" {
		return '/'
	}
	ELSE IFDEF "target_darwin" {
		return '/'
	}
	ELSE IFDEF "target_windows" {
		return '\\'
	}
	ELSE IFDEF "target_kotlin" {
		return lang "kotlin" char {{{ java.io.File.pathSeparatorChar }}}
	}
	ELSE IFDEF "target_swift" {
		return "/"
	}
	ELSE {
		if OS.isWindows():
			return '\\'
		return '/'
	}
}

func isAbsolutePath(path as string) static as bool
{
	assert path
	IFDEF "target_android" {
		return String.startsWith(path, "/")
	}
	ELSE IFDEF "target_darwin" {
		return String.startsWith(path, "/")
	}
	ELSE IFDEF "target_browser" {
		return String.startsWith(path, "/")
	}
	ELSE {
		var c0 = String.getChar(path, 0)
		if c0 == '/':
			return true
		if OS.isWindows() {
			if c0 == '\\':
				return true
			if Character.isAlpha(c0) && String.getChar(path, 1) == ':' {
				var d = String.getChar(path, 2)
				if d == '\\' || d == '/':
					return true
			}
		}
		return false
	}
}
