
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is Writer:

func forBuffer(buf as buffer) static as this
{
	var v = new this()
	v.buffer = buf
	return v
}

var buffer as buffer = null
var pos = 0

func getBufferSize as int:
	return Buffer.getSize(buffer)

func getBufferPos as int:
	return 0

func getBuffer as buffer:
	return buffer

func write(src as buffer, ssize as int) as int
{
	if src == null:
		return 0
	var size = ssize
	if size < 0:
		size = Buffer.getSize(src)
	if size < 1:
		return 0
	if buffer == null {
		buffer = malloc size
		if buffer == null:
			return 0
		Buffer.copyFrom(buffer, src, 0, 0, size)
		pos = size
	}
	else if pos + size <= Buffer.getSize(buffer) {
		Buffer.copyFrom(buffer, src, 0, pos, size)
		pos += size
	}
	else {
		var nb = Buffer.resize(buffer, pos + size)
		if nb == null:
			return 0
		buffer = nb
		Buffer.copyFrom(buffer, src, 0, pos, size)
		pos += size
	}
	return size
}
