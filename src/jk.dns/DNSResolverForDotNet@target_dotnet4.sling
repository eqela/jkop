
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is DNSResolver:

func getNSRecords(host as string, type as string, ctx as LoggingContext) override as DynamicVector
{
	// FIXME - No imlementation yet.
	return null
}

func getIPAddress(hostname as string, ctx as LoggingContext) override as string
{
	var v = getIPAddresses(hostname, ctx)
	if v == null || v.getSize() < 1:
		return null
	var ip = v.get(0) as string
	if ip:
		return ip
	return null
}

func getIPAddresses(hostname as string, ctx as LoggingContext) override as DynamicVector
{
	var v = new DynamicVector()
	var error as string #preserve
	try {
		var addresses = assert lang "cs" array<!"System.Net.IPAddress"> {{{ System.Net.Dns.GetHostAddresses(hostname) }}}
		foreach address in addresses {
			var ip = lang "cs" string {{{ address.ToString() }}}
			if String.isNotEmpty(ip) {
				v.append(ip)
			}
		}
	}
	catch(e as !"System.Exception") {
		error = lang "cs" string {{{ e.ToString() }}}
	}
	if String.isNotEmpty(error):
		Log.error(ctx, error)
	return v
}
