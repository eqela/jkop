
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

prop sheet as Image
prop cols = -1
prop rows = -1
prop sourceSkipX = 0
prop sourceSkipY = 0
prop sourceImageWidth = -1
prop sourceImageHeight = -1
prop maxImages = -1

func toImages(resizeToWidth as int = -1, resizeToHeight as int = -1) as vector<Image>
{
	assert sheet
	var cols = this.cols
	var rows = this.rows
	var fwidth = sourceImageWidth
	if fwidth < 1 {
		fwidth = (sheet.getPixelWidth() - sourceSkipX) / cols
	}
	else {
		cols = (sheet.getPixelWidth() - sourceSkipX) / fwidth
	}
	var fheight = sourceImageHeight
	if fheight < 1 {
		fheight = (sheet.getPixelHeight() - sourceSkipY) / rows
	}
	else {
		rows = (sheet.getPixelHeight() - sourceSkipY) / fheight
	}
	var frames = new vector<Image>
	var x as int
	var y as int
	for(y=0; y<rows; y++) {
		for(x=0 ;x<cols; x++) {
			var img = sheet.crop(x*fwidth, y*fheight, fwidth, fheight)
			if resizeToWidth > 0:
				img = img.scaleToSize(resizeToWidth, resizeToHeight)
			frames += img
			if maxImages > 0 && Vector.getSize(frames) >= maxImages:
				return frames
		}
	}
	return frames
}
