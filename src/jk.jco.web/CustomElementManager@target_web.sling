
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func isRegistered(name as string) static as bool
{
	var v = lang "js" object {{{ customElements.get(name) }}}
	if v:
		return true
	return false
}

func register(name as string, reference as typeinfo) static
{
	println "Registering custom element: `" .. name .. "'"
	lang "js" {{{
		customElements.define(name, reference)
	}}}
}

func getRegisteredTypeName(tt as typeinfo) static as string
{
	var name = lang "js" string {{{ tt.name }}}
	if String.isEmpty(name):
		return null
	var sb = new StringBuilder()
	sb.appendString("jco-")
	var first = true
	var it = String.iterate(name)
	while it {
		var c = it.getNextChar()
		if Character.isEOF(c):
			break
		if Character.isUppercaseAlpha(c) && not first:
			sb.appendCharacter('-')
		sb.appendCharacter(Character.toLowercase(c))
		first = false
	}
	var v = sb.toString()
	if not isRegistered(v):
		register(v, tt)
	return v
}
