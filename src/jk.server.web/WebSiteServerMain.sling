
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.fs
import jk.http.server
import jk.env

class is WebServer:

pvar templateDir as File
pvar resourceDir as File

ctor
{
	var cdir as File
	var lib = CommonPath.getCodeFileForObject(this)
	if lib:
		cdir = lib.getParent()
	if not cdir || cdir is FileInvalid:
		cdir = CommonPath.getAppDirectory()
	if not cdir || cdir is FileInvalid:
		cdir = File.forPath(".")
	if cdir {
		templateDir = cdir.entry("templates")
		resourceDir = cdir.entry("resources")
	}
}

func configure(key as string, value as string, relativeTo as File, error as Error) override as bool
{
	if key == "templates" {
		templateDir = File.forRelativePath(value, relativeTo)
		return true
	}
	if key == "resources" {
		resourceDir = File.forRelativePath(value, relativeTo)
		return true
	}
	return base.configure(key, value, relativeTo, error)
}

func initializeServer(server as HTTPServer) override as bool
{
	assert base.initializeServer(server)
	var wssh = getHandler() as WebSiteServerHandler
	if wssh {
		wssh.setTemplateDir(templateDir)
		wssh.setResourceDir(resourceDir)
	}
	return true
}
