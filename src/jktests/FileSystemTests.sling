
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.env
import jk.test

class is UnitTest:

func testMoveFile
{
	var tf1 = TemporaryFile.create()
	var tf2 = TemporaryFile.create()
	ASSERT(tf1 && tf1.isFile())
	ASSERT(tf2 && tf2.isFile())
	EXPECT_EXCEPTION(tf1.move(tf2, false))
	VOID_ASSERT(tf1.move(tf2, true))
	ASSERT(tf1.isFile() == false)
	ASSERT(tf2.isFile() == true)
	VOID_ASSERT(tf2.remove())
	ASSERT(tf2.isFile() == false)
}

func testRenameFile
{
	var td = TemporaryDirectory.create()
	ASSERT(td.isDirectory() == true)
	var tf1 = td.entry("file1")
	var tf2 = td.entry("file2")
	var tf3 = td.entry("file3")
	tf1.setContentsUTF8("data")
	ASSERT(tf1.getContentsUTF8() == "data")
	VOID_ASSERT(tf1.rename("file2", false))
	ASSERT(tf1.isFile() == false)
	ASSERT(tf2.isFile() == true)
	ASSERT(tf2.getContentsUTF8() == "data")
	tf3.touch()
	ASSERT(tf3.isFile() == true)
	ASSERT(tf3.getContentsUTF8() == "")
	EXPECT_EXCEPTION(tf2.rename("file3", false))
	ASSERT(tf2.isFile() == true)
	ASSERT(tf3.isFile() == true)
	ASSERT(tf3.getContentsUTF8() == "")
	VOID_ASSERT(tf2.rename("file3", true))
	ASSERT(tf2.isFile() == false)
	ASSERT(tf3.isFile() == true)
	ASSERT(tf3.getContentsUTF8() == "data")
	VOID_ASSERT(td.removeRecursive())
	ASSERT(tf3.isFile() == false)
	ASSERT(td.isDirectory() == false)
}

func execute override as bool
{
	START_TESTS()
	TEST("Move file", testMoveFile())
	TEST("Rename file", testRenameFile())
	END_TESTS()
}
