
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

**
** Creates an instance of this class with the
** specified column name and type.
**

func instance(name as string, type as int) static as this
{
	return(new this().setName(name).setType(type))
}

**
** Creates an instance of this class with the
** specified column name with a type of integer.
**

func forInteger(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_INTEGER))
}

**
** Creates an instance of this class with the
** specified column name with a type of string.
**

func forString(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_STRING))
}

**
** Creates an instance of this class with the
** specified column name as a primary key of type string.
**

func forStringKey(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_STRING_KEY))
}

**
** Creates an instance of this class with the
** specified column name with a type of text.
**

func forText(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_TEXT))
}

**
** Creates an instance of this class with the
** specified column name as a primary key of type integer.
**

func forIntegerKey(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_INTEGER_KEY))
}

**
** Creates an instance of this class with the
** specified column name as a primary key of type long.
**

func forLongIntegerKey(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_LONG_KEY))
}

**
** Creates an instance of this class with the
** specified column name with a type of long.
**

func forLongInteger(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_LONG))
}

**
** Creates an instance of this class with the
** specified column name with a type of double.
**

func forDouble(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_DOUBLE))
}

**
** Creates an instance of this class with the
** specified column name with a type of blob.
**

func forBlob(name as string) static as this
{
	return(new this().setName(name).setType(TYPE_BLOB))
}

const TYPE_INTEGER = 0
const TYPE_STRING = 1
const TYPE_TEXT = 2
const TYPE_INTEGER_KEY = 3
const TYPE_DOUBLE = 4
const TYPE_BLOB = 5
const TYPE_STRING_KEY = 6
const TYPE_LONG = 7
const TYPE_LONG_KEY = 8

prop name as string
prop type as int
