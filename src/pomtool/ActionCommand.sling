
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.text

class:

func forText(text as string) static as this:
	return new this().parse(text)

pvar command as string
pvar parameters as vector<string>

func isCommand(value as string) as bool
{
	if command && value && String.equals(value, command):
		return true
	return false
}

func addParameter(value as string) as this
{
	if value {
		if not parameters:
			parameters = new vector<string>
		parameters += value
	}
	return this
}

func getParameter(index as int) as string
{
	assert parameters
	return Vector.get(parameters, index)
}

func parse(text as string) as this
{
	var vv = StringUtil.quotedStringToVector(text, ' ')
	if vv {
		setCommand(Vector.get(vv, 0))
		Vector.removeFirst(vv)
		setParameters(vv)
	}
	else {
		setCommand(null)
		setParameters(null)
	}
	if String.isEmpty(command):
		return null
	return this
}
