
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class extends magical<UIViewController>:

depend "objc-header-h:<UIKit/UIKit.h>"
depend "ios-plist:{ \"UIViewControllerBasedStatusBarAppearance\" : \"YES\" }"
import cape

var ctx protected as LoggingContext
prop isLightStatusBar = false

func setContext(ctx as LoggingContext)
{
	this.ctx = ctx
}

func jkInitialize virtual
{
}

func jkLayout virtual
{
}

func jkStart virtual
{
}

func jkStop virtual
{
}

func jkCleanup virtual
{
}

func jkGetWidth as int
{
	return(lang "objc" int {{{ self.view.frame.size.width }}})
}

func jkGetHeight as int
{
	return(lang "objc" int {{{ self.view.frame.size.height }}})
}

func createColor(r as double, g as double, b as double, a as double) as object
{
	return(lang "objc" object {{{ [UIColor colorWithRed:r green:g blue:b alpha:a] }}})
}

func getBackgroundColor as object
{
	return(lang "objc" object {{{ [UIColor whiteColor] }}})
}

func viewDidLoad
{
	lang "objc" {{{
		[super viewDidLoad];
		[self setNeedsStatusBarAppearanceUpdate];
	}}}
}

func preferredStatusBarStyle as !"UIStatusBarStyle"
{
	if(isLightStatusBar) {
		return(lang "objc" !"UIStatusBarStyle" {{{ UIStatusBarStyleLightContent }}})
	}
	return(lang "objc" !"UIStatusBarStyle" {{{ UIStatusBarStyleDefault }}})
}

func loadView
{
	lang "objc" {{{
		UIView* view = [[UIView alloc] init];
		view.backgroundColor = (UIColor*)[self getBackgroundColor];
		self.view = view;
	}}}
	jkInitialize()
}

func viewWillLayoutSubviews
{
	lang "objc" {{{
		[super viewWillLayoutSubviews];
	}}}
	jkLayout()
}

func viewDidAppear(animated as bool)
{
	jkStart()
}

func viewWillDisappear(animated as bool)
{
	jkStop()
	lang "objc" {{{
		if([self isBeingDismissed]) {
			[self jkCleanup];
		}
	}}}
}

func didMoveToParentViewController(parent as !"UIViewController*")
{
	if(parent == null) {
		jkCleanup()
	}
}
