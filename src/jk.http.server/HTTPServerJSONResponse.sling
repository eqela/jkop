
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2019 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func forError(eo as object) static as DynamicMap
{
	if eo is Error {
		var error = eo as! Error
		var v = new DynamicMap()
		v.setString("status", "error")
		if error {
			var code = error.getCode()
			var detail = String.asString(error.getDetail())
			if String.isNotEmpty(code):
				v.setString("code", code)
			if String.isNotEmpty(detail):
				v.setString("detail", detail)
		}
		return v
	}
	if eo is string:
		return forErrorCode(eo as! string)
	var v = new DynamicMap()
	v.setString("status", "error")
	return v
}

func forErrorCode(code as string) static as DynamicMap
{
	var v = new DynamicMap()
	v.setString("status", "error")
	v.setString("code", code)
	return v
}

func forErrorMessage(message as string = null, code as string = null) static as DynamicMap
{
	var v = new DynamicMap()
	v.setString("status", "error")
	if String.isNotEmpty(message):
		v.setString("message", message)
	if String.isNotEmpty(code):
		v.setString("code", code)
	return v
}

func forOk(data as object = null) static as DynamicMap
{
	var v = new DynamicMap()
	v.setString("status", "ok")
	if data:
		v.setObject("data", data)
	return v
}

func forDetails(status as string, code as string, message as string) static as DynamicMap
{
	var v = new DynamicMap()
	if String.isNotEmpty(status):
		v.setString("status", status)
	if String.isNotEmpty(code):
		v.setString("code", code)
	if String.isNotEmpty(message):
		v.setString("message", message)
	return v
}

func forMissingData(type as string = null) static as DynamicMap
{
	if String.isNotEmpty(type):
		return forErrorMessage("Missing data: " .. type, "missing_data")
	return forErrorMessage("Missing data", "missing_data")
}

func forInvalidData(type as string = null) static as DynamicMap
{
	if String.isNotEmpty(type):
		return forErrorMessage("Invalid data: " .. type, "invalid_data")
	return forErrorMessage("Invalid data", "invalid_data")
}

func forAlreadyExists static as DynamicMap:
	return forErrorMessage("Already exists", "already_exists")

func forInvalidRequest(type as string = null) static as DynamicMap
{
	if String.isNotEmpty(type):
		return forErrorMessage("Invalid request: " .. type, "invalid_request")
	return forErrorMessage("Invalid request", "invalid_request")
}

func forNotAllowed static as DynamicMap:
	return forErrorMessage("Not allowed", "not_allowed")

func forNotAuthenticated static as DynamicMap:
	return forErrorMessage("Not authenticated", "not_authenticated")

func forFailedToCreate static as DynamicMap:
	return forErrorMessage("Failed to create", "failed_to_create")

func forNotFound static as DynamicMap:
	return forErrorMessage("Not found", "not_found")

func forAuthenticationFailed static as DynamicMap:
	return forErrorMessage("Authentication failed", "authentication_failed")

func forIncorrectUsernamePassword static as DynamicMap:
	return forErrorMessage("Incorrect username and/or password", "authentication_failed")

func forInternalError(details as string = null) static as DynamicMap
{
	if String.isNotEmpty(details):
		return forErrorMessage("Internal error: " .. details, "internal_error")
	return forErrorMessage("Internal error", "internal_error")
}
