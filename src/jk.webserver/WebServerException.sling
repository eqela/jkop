
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is Exception is StringObject:

const BAD_REQUEST = 400
const UNAUTHORIZED = 401
const PAYMENT_REQUIRED = 402
const FORBIDDEN = 403
const NOT_FOUND = 404
const METHOD_NOT_ALLOWED = 405
const NOT_ACCEPTABLE = 406
const PROXY_AUTHENTICATION_REQUIRED = 407
const REQUEST_TIMEOUT = 408
const CONFLICT = 409
const GONE = 410
const LENGTH_REQUIRED = 411
const PRECONDITION_FAILED = 412
const PAYLOAD_TOO_LARGE = 413
const URI_TOO_LONG = 414
const UNSUPPORTED_MEDIA_TYPE = 415
const RANGE_NOT_SATISFIABLE = 416
const EXPECTATION_FAILED = 417
const IM_A_TEAPOT = 418
const MISDIRECTED_REQUEST = 421
const UNPROCESSABLE_CONTENT = 422
const LOCKED = 423
const FAILED_DEPENDENCY = 424
const TOO_EARLY = 425
const UPGRADE_REQUIRED = 426
const PRECONDITION_REQUIRED = 428
const TOO_MANY_REQUESTS = 429
const REQUEST_HEADER_FIELDS_TOO_LARGE = 431
const UNAVAILABLE_FOR_LEGAL_REASONS = 451
const INTERNAL_SERVER_ERROR = 500
const NOT_IMPLEMENTED = 501
const BAD_GATEWAY = 502
const SERVICE_UNAVAILABLE = 503
const GATEWAY_TIMEOUT = 504
const HTTP_VERSION_NOT_SUPPORTED = 505
const VARIANT_ALSO_NEGOTIATES = 506
const INSUFFICIENT_STORAGE = 507
const LOOP_DETECTED = 508
const NOT_EXTENDED = 510
const NETWORK_AUTHENTICATION_REQUIRED = 511

func forStatus(status as int, data as dynamic = null) static as this
{
    var v = new this()
    v.httpStatus = status
    v.data = data
    return v
}

func forUnauthorized static as this:
    return new this() { httpStatus UNAUTHORIZED }

func forForbidden static as this:
    return new this() { httpStatus FORBIDDEN }

func forNotFound static as this:
    return new this() { httpStatus NOT_FOUND }

func forBadRequest static as this:
    return new this() { httpStatus BAD_REQUEST }

func forInternalServerError static as this:
    return new this() { httpStatus INTERNAL_SERVER_ERROR }

prop httpStatus as int
prop data as dynamic

func toString as string:
    return "httpError:" .. String.forInteger(httpStatus)
