
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is RichTextParagraph:

prop reference as string
prop text as string

func toMarkup override as string
{
	var sb = new StringBuilder()
	sb.append("@reference ")
	sb.append(reference)
	if(String.isEmpty(text) == false) {
		sb.append(' ')
		sb.append('"')
		sb.append(text)
		sb.append('"')
	}
	return sb.toString()
}

func toText override as string
{
	var v = text
	if(String.isEmpty(text)) {
		v = reference
	}
	return v
}

func toJson override as DynamicMap
{
	var v = new DynamicMap()
	v.set("type", "reference")
	v.set("reference", reference)
	v.set("text", text)
	return v
}

func toHtml(refs as RichTextDocumentReferenceResolver) override as string
{
	var reftitle as string
	var href as string
	if(String.isEmpty(text) == false) {
		reftitle = text
	}
	if(String.isEmpty(reftitle)) {
		if(refs != null) {
			reftitle = refs.getReferenceTitle(reference)
		}
		else {
			reftitle = reference
		}
	}
	if(refs != null) {
		href = refs.getReferenceHref(reference)
	}
	else {
		href = reference
	}
	if(String.isEmpty(href)) {
		return ""
	}
	if(String.isEmpty(reftitle)) {
		reftitle = href
	}
	return "<p class=\"reference\"><a href=\"" .. HTMLString.sanitize(href) .. "\">" .. HTMLString.sanitize(reftitle) .. "</a></p>\n"
}
