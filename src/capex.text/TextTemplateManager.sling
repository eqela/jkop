
/*
 * This file is part of Eqela
 * Copyright (c) 2017 Job and Esther Technologies Oy
 * All rights reserved.
 */

class:

func forDirectory(dir as File, cached as bool = false) static as this
{
	assert dir && dir.isDirectory()
	var it = assert dir.entries()
	var v = new map<string, object>
	loop {
		var f = it.next()
		if not f:
			break
		if f.isFile() {
			if cached {
				var b = assert f.getContentsUTF8()
				Map.set(v, f.getBasename(), b)
				continue
			}
			Map.set(v, f.getBasename(), f)
		}
	}
	return forTemplates(v)
}

func forTemplates(data as map<string,object>) static as this
{
	var v = new this()
	v.setTemplates(data)
	return v
}

prop templates as map<string,object>

func getTemplateData(name as string) as string
{
	assert name
	assert templates
	var o = assert Map.get(templates, name)
	if o is string:
		return o as! string
	if o is buffer:
		return String.forUTF8Buffer(o as! buffer)
	if o is File:
		return (o as! File).getContentsUTF8()
	return null
}

func getText(name as string, vars as DynamicMap = null) as string
{
	var td = assert getTemplateData(name)
	var vv = vars
	if not vv:
		vv = new DynamicMap()
	var tt = assert TextTemplate.forHTMLString(td, null, templates)
	return tt.execute(vv)
}
