
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import capex.data

class is TemplateStorage:

func forDatabase(db as SQLDatabase, table as string = null, idColumn as string = null, contentColumn as string = null) static as this
{
	var v = new this()
	v.setDatabase(db)
	if(table != null) {
		v.setTable(table)
	}
	if(idColumn != null) {
		v.setIdColumn(idColumn)
	}
	if(contentColumn != null) {
		v.setContentColumn(contentColumn)
	}
	return v
}

prop database as SQLDatabase
prop table as string
prop idColumn as string
prop contentColumn as string

ctor
{
	table = "templates"
	idColumn = "id"
	contentColumn = "content"
}

func getTemplate(id as string, callback as function<void,string>)
{
	if(callback == null) {
		return
	}
	if(database == null || String.isEmpty(table) || String.isEmpty(id)) {
		callback(null)
		return
	}
	var stmt = database.prepare("SELECT content FROM " .. table .. " WHERE " .. idColumn .. " = ?;")
	if(stmt == null) {
		callback(null)
		return
	}
	stmt.addParamString(id)
	var cb final = callback
	database.querySingleRow(stmt, func(data as DynamicMap) {
		if(data == null) {
			cb(null)
			return
		}
		cb(data.getString("content"))
	})
}
