
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is CommonServer abstract:

class MyWSServer is WSServer
{
	prop myParent as parent

	func onMaintenance override
	{
		base.onMaintenance()
		myParent.onMaintenance()
	}
}

func createConnectionHandler abstract as WSServerConnectionHandler

func initializeServer(server as WSServer) virtual as bool:
	return true

func initializeNetworkServer(server as NetworkServer) override as bool
{
	assert base.initializeNetworkServer(server)
	if server is WSServer:
		assert initializeServer(server as! WSServer)
	return true
}

func createServer override as NetworkServer
{
	var server = new MyWSServer()
	server.setMaintenanceTimerDelay(getMaintenanceTimerDelay())
	server.setMyParent(this)
	server.setPort(getListenPort())
	server.setCreateConnectionHandlerObject(func as WSServerConnectionHandler {
		return createConnectionHandler()
	})
	return server
}
