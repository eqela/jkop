
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is IntegerObject:

func forValue(value as int) static as this:
	return asObject(value)

func asObject(integer as int) static as this
{
	var v = new this()
	v.setValue(integer)
	return v
}

func asInteger(obj as dynamic) static as int
{
	if not obj:
		return 0
	if obj is int:
		return obj as int
	if obj is IntegerObject {
		var oi = obj as! IntegerObject
		return oi.toInteger()
	}
	if obj is long {
		var v = obj as long
		return v as int
	}
	if obj is LongIntegerObject {
		var oi = obj as! LongIntegerObject
		return oi.toLong() as int
	}
	if obj is string:
		return String.toInteger(obj as! string)
	if obj is StringObject:
		return String.toInteger((obj as! StringObject).toString())
	if obj is double {
		var v = obj as double
		return v as int
	}
	if obj is DoubleObject {
		var od = obj as! DoubleObject
		return od.toDouble() as int
	}
	if obj is bool {
		if obj as bool == true:
			return 1
		return 0
	}
	if obj is BooleanObject {
		if (obj as! BooleanObject).toBoolean():
			return 1
		return 0
	}
	if obj is char {
		var v = obj as char
		return v as int
	}
	if obj is CharacterObject {
		var oc = obj as! CharacterObject
		return oc.toCharacter() as int
	}
	return 0
}

pvar value as int

func add(amount as int):
	value += amount

func toInteger as int:
	return value
