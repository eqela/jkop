
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import cave

class:

func addColorSprite(scene as Scene, layer as SpriteLayer, color as Color, width as double) static as TextureSprite:
	return addColorSprite(scene, layer, color, width, 0.0)

func addColorSprite(scene as Scene, layer as SpriteLayer, color as Color, width as double, height as double) static as TextureSprite
{
	var text = assert scene.createTextureForColor(color)
	return layer.addTextureSpriteForSize(text, width, height)
}

func addTextureSpriteForWidth(scene as Scene, layer as SpriteLayer, texture as Texture, width as double) static as TextureSprite:
	return layer.addTextureSpriteForSize(texture, width, 0.0)

func addTextureSpriteForHeight(scene as Scene, layer as SpriteLayer, texture as Texture, height as double) static as TextureSprite:
	return layer.addTextureSpriteForSize(texture, 0.0, height)

func addTextureSpriteForSize(scene as Scene, layer as SpriteLayer, texture as Texture, width as double, height as double) static as TextureSprite:
	return layer.addTextureSpriteForSize(texture, width, height)

func addTextSprite(scene as Scene, layer as SpriteLayer, text as string) static as TextSprite:
	return layer.addTextSprite(TextProperties.forText(text))

func addTextSpriteWithAbsoluteSize(scene as Scene, layer as SpriteLayer, text as string, size as double) static as TextSprite
{
	var tp = TextProperties.forText(text)
	tp.setFontSizeAbsolute(size)
	return layer.addTextSprite(tp)
}

func addTextSpriteWithRelativeSize(scene as Scene, layer as SpriteLayer, text as string, size as double) static as TextSprite
{
	var tp = TextProperties.forText(text)
	tp.setFontSizeRelative(size)
	return layer.addTextSprite(tp)
}

func getAspectWidth(owidth as double, oheight as double, nwidth as double, nheight as double) static as double
{
	if nwidth > 0.0:
		return nwidth
	if oheight == 0.0:
		return 0.001
	return owidth * nheight / oheight
}

func getAspectHeight(owidth as double, oheight as double, nwidth as double, nheight as double) static as double
{
	if nheight > 0.0:
		return nheight
	if owidth == 0.0:
		return 0.001
	return oheight * nwidth / owidth
}
