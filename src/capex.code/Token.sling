
/*
 * This file is part of Jkop
 * Copyright (c) 2019 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is SourceReference:

func instance(value as string, line as int, column as int, position as int) static as this
{
	var v = new this()
	v.value = value
	v.line = line
	v.column = column
	v.position = position
	return v
}

var value public as string
var line public as int
var column public as int
var position public as int
var source public as TokenSource

func dupWithValue(str as string) as this
{
	var v = new this()
	v.value = str
	v.line = line
	v.column = column
	v.position = position
	v.source = source
	return v
}

func getTokenLineCount as int
{
	if value == null:
		return 0
	var v = 1
	var it = String.iterate(value)
	loop {
		var c = it.getNextChar()
		if c < 1:
			break
		if c == '\n':
			v ++
	}
	return v
}

func setValue(val as string) as this
{
	value = val
	return this
}

func getValue as string:
	return value

func getSourceName as string
{
	assert source
	return source.getName()
}

func getSourceToken as string:
	return value

func getSourceLineNumber as int:
	return line

func getSourceColumnNumber as int:
	return column

func getSourceContentLine as string
{
	assert source
	return source.getLine(line)
}

func getNodeTrace as string:
	return null
