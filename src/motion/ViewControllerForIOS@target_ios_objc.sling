
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import cave

class is Screen:

depend "objc-header-m:<UIKit/UIKit.h>"
depend "objc-framework:UIKit"
depend "objc-header-m:<SpriteKit/SpriteKit.h>"
depend "objc-framework:SpriteKit"

func forScene(scene as Scene, context as GuiApplicationContextForIOS) static as this
{
	var v = new this()
	var cc = context
	if cc == null:
		cc = new GuiApplicationContextForIOS()
	v.setContext(cc)
	v.initialize(scene)
	return v
}

prop context as GuiApplicationContextForIOS
var backend as BackendForSpriteKit
var scene as Scene
var view as !"SKView*"

func initialize(scene as Scene)
{
	this.scene = scene
}

func loadView
{
	lang "objc" {{{
		view = [[SKView alloc] init];
		[self setView:view];
	}}}
}

func viewDidAppear(animated as bool)
{
	lang "objc" {{{
		[super viewDidAppear:animated];
	}}}
	backend = new BackendForSpriteKit()
	backend.initialize(context, view, scene, false)
}

func applicationWillTerminate(application as !"UIApplication*")
{
	if backend:
		backend.cleanup()
}

func applicationDidBecomeActive(application as !"UIApplication*")
{
	if backend:
		backend.start()
}

func applicationWillResignActive(application as !"UIApplication*")
{
	if backend:
		backend.stop()
}
