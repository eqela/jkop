
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.fs
import jk.process
import jk.os

class:

func openFile(file as File) static as bool
{
	IFDEF "target_android" {
		return false
	}
	ELSE IFDEF "target_macos" {
		var pl = ProcessLauncher.forCommand("open", [ file.getPath() ])
		if pl.executeSilent() == 0:
			return true
		return false
	}
	ELSE IFDEF "target_ios" {
		return false
	}
	ELSE IFDEF "target_browser" {
		return false
	}
	ELSE IFDEF "target_windows" {
		var pl = ProcessLauncher.forCommand("explorer", [ file.getPath() ])
		if pl.executeSilent() == 0:
			return true
		return false
	}
	ELSE {
		if OS.isWindows() {
			var pl = ProcessLauncher.forCommand("explorer", [ file.getPath() ])
			if pl.executeSilent() == 0:
				return true
			return false
		}
		if OS.isMacOS() {
			var pl = ProcessLauncher.forCommand("open", [ file.getPath() ])
			if pl.executeSilent() == 0:
				return true
			return false
		}
		if OS.isLinux() {
			var pl = ProcessLauncher.forCommand("xdg-open", [ file.getPath() ])
			if pl.executeSilent() == 0:
				return true
			return false
		}
		return false
	}
}

func openURL(url as string) static as bool
{
	assert url
	IFDEF "target_cs" {
		lang "cs" {{{
			System.Diagnostics.Process.Start(url);
		}}}
		return true
	}
	return false
}
